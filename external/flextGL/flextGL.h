/* WARNING: This file was automatically generated */
/* Do not edit. */

#ifndef __gl_h_
#define __gl_h_

#ifdef __cplusplus
extern "C" {
#endif

/* Function declaration macros - to move into glplatform.h */

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#define WIN32_LEAN_AND_MEAN 1
#ifndef WINAPI
#define WINAPI __stdcall
#endif
#define APIENTRY WINAPI
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#define GLAPI extern
#endif

/* -------------------------------- DATA TYPES ------------------------------- */

#include <stddef.h>
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef char GLchar;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;

/* ----------------------------------- ENUMS --------------------------------- */

/* GL_VERSION_1_1 */

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_DOUBLE 0x140A
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_REPEAT 0x2901
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP 0x0BF1
#define GL_AUX_BUFFERS 0x0C00
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_VERTEX_ARRAY 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_2_BYTES 0x1407
#define GL_3_BYTES 0x1408
#define GL_4_BYTES 0x1409
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_PROJECTION 0x1701
#define GL_COLOR_INDEX 0x1900
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_CLAMP 0x2900
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007

/* GL_VERSION_1_2 */

#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_RESCALE_NORMAL 0x803A
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D

/* GL_VERSION_1_3 */

#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_NORMAL_MAP 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMBINE 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_RGB_SCALE 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_SUBTRACT 0x84E7
#define GL_CONSTANT 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PREVIOUS 0x8578
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF

/* GL_VERSION_1_4 */

#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004

/* GL_VERSION_1_5 */

#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORD 0x8451
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_RGB 0x8582
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC2_ALPHA 0x858A

/* GL_VERSION_2_0 */

#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_POINT_SPRITE 0x8861
#define GL_COORD_REPLACE 0x8862
#define GL_MAX_TEXTURE_COORDS 0x8871

/* GL_EXT_framebuffer_object */

#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#define GL_FRAMEBUFFER_EXT 0x8D40
#define GL_RENDERBUFFER_EXT 0x8D41
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_STENCIL_INDEX1_EXT 0x8D46
#define GL_STENCIL_INDEX4_EXT 0x8D47
#define GL_STENCIL_INDEX8_EXT 0x8D48
#define GL_STENCIL_INDEX16_EXT 0x8D49
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55

/* GL_ARB_texture_float */

#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_RGBA32F_ARB 0x8814
#define GL_RGB32F_ARB 0x8815
#define GL_ALPHA32F_ARB 0x8816
#define GL_INTENSITY32F_ARB 0x8817
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_RGBA16F_ARB 0x881A
#define GL_RGB16F_ARB 0x881B
#define GL_ALPHA16F_ARB 0x881C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F

/* GL_ARB_geometry_shader4 */

#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4

/* GL_EXT_transform_feedback */

#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76

/* GL_EXT_texture_filter_anisotropic */

#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF

/* --------------------------- FUNCTION PROTOTYPES --------------------------- */


/* GL_ARB_geometry_shader4 */

typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTUREARB_PROC (GLenum target, GLenum attachment, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTUREFACEARB_PROC (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURELAYERARB_PROC (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer));
typedef void (APIENTRY PFNGLPROGRAMPARAMETERIARB_PROC (GLuint program, GLenum pname, GLint value));

GLAPI PFNGLFRAMEBUFFERTEXTUREARB_PROC* glpfFramebufferTextureARB;
GLAPI PFNGLFRAMEBUFFERTEXTUREFACEARB_PROC* glpfFramebufferTextureFaceARB;
GLAPI PFNGLFRAMEBUFFERTEXTURELAYERARB_PROC* glpfFramebufferTextureLayerARB;
GLAPI PFNGLPROGRAMPARAMETERIARB_PROC* glpfProgramParameteriARB;

#define glFramebufferTextureARB glpfFramebufferTextureARB
#define glFramebufferTextureFaceARB glpfFramebufferTextureFaceARB
#define glFramebufferTextureLayerARB glpfFramebufferTextureLayerARB
#define glProgramParameteriARB glpfProgramParameteriARB


/* GL_ARB_texture_float */





/* GL_EXT_framebuffer_object */

typedef void (APIENTRY PFNGLBINDFRAMEBUFFEREXT_PROC (GLenum target, GLuint framebuffer));
typedef void (APIENTRY PFNGLBINDRENDERBUFFEREXT_PROC (GLenum target, GLuint renderbuffer));
typedef GLenum (APIENTRY PFNGLCHECKFRAMEBUFFERSTATUSEXT_PROC (GLenum target));
typedef void (APIENTRY PFNGLDELETEFRAMEBUFFERSEXT_PROC (GLsizei n, const GLuint * framebuffers));
typedef void (APIENTRY PFNGLDELETERENDERBUFFERSEXT_PROC (GLsizei n, const GLuint * renderbuffers));
typedef void (APIENTRY PFNGLFRAMEBUFFERRENDERBUFFEREXT_PROC (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE1DEXT_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE2DEXT_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE3DEXT_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset));
typedef void (APIENTRY PFNGLGENFRAMEBUFFERSEXT_PROC (GLsizei n, GLuint * framebuffers));
typedef void (APIENTRY PFNGLGENRENDERBUFFERSEXT_PROC (GLsizei n, GLuint * renderbuffers));
typedef void (APIENTRY PFNGLGENERATEMIPMAPEXT_PROC (GLenum target));
typedef void (APIENTRY PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXT_PROC (GLenum target, GLenum attachment, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETRENDERBUFFERPARAMETERIVEXT_PROC (GLenum target, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISFRAMEBUFFEREXT_PROC (GLuint framebuffer));
typedef GLboolean (APIENTRY PFNGLISRENDERBUFFEREXT_PROC (GLuint renderbuffer));
typedef void (APIENTRY PFNGLRENDERBUFFERSTORAGEEXT_PROC (GLenum target, GLenum internalformat, GLsizei width, GLsizei height));

GLAPI PFNGLBINDFRAMEBUFFEREXT_PROC* glpfBindFramebufferEXT;
GLAPI PFNGLBINDRENDERBUFFEREXT_PROC* glpfBindRenderbufferEXT;
GLAPI PFNGLCHECKFRAMEBUFFERSTATUSEXT_PROC* glpfCheckFramebufferStatusEXT;
GLAPI PFNGLDELETEFRAMEBUFFERSEXT_PROC* glpfDeleteFramebuffersEXT;
GLAPI PFNGLDELETERENDERBUFFERSEXT_PROC* glpfDeleteRenderbuffersEXT;
GLAPI PFNGLFRAMEBUFFERRENDERBUFFEREXT_PROC* glpfFramebufferRenderbufferEXT;
GLAPI PFNGLFRAMEBUFFERTEXTURE1DEXT_PROC* glpfFramebufferTexture1DEXT;
GLAPI PFNGLFRAMEBUFFERTEXTURE2DEXT_PROC* glpfFramebufferTexture2DEXT;
GLAPI PFNGLFRAMEBUFFERTEXTURE3DEXT_PROC* glpfFramebufferTexture3DEXT;
GLAPI PFNGLGENFRAMEBUFFERSEXT_PROC* glpfGenFramebuffersEXT;
GLAPI PFNGLGENRENDERBUFFERSEXT_PROC* glpfGenRenderbuffersEXT;
GLAPI PFNGLGENERATEMIPMAPEXT_PROC* glpfGenerateMipmapEXT;
GLAPI PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXT_PROC* glpfGetFramebufferAttachmentParameterivEXT;
GLAPI PFNGLGETRENDERBUFFERPARAMETERIVEXT_PROC* glpfGetRenderbufferParameterivEXT;
GLAPI PFNGLISFRAMEBUFFEREXT_PROC* glpfIsFramebufferEXT;
GLAPI PFNGLISRENDERBUFFEREXT_PROC* glpfIsRenderbufferEXT;
GLAPI PFNGLRENDERBUFFERSTORAGEEXT_PROC* glpfRenderbufferStorageEXT;

#define glBindFramebufferEXT glpfBindFramebufferEXT
#define glBindRenderbufferEXT glpfBindRenderbufferEXT
#define glCheckFramebufferStatusEXT glpfCheckFramebufferStatusEXT
#define glDeleteFramebuffersEXT glpfDeleteFramebuffersEXT
#define glDeleteRenderbuffersEXT glpfDeleteRenderbuffersEXT
#define glFramebufferRenderbufferEXT glpfFramebufferRenderbufferEXT
#define glFramebufferTexture1DEXT glpfFramebufferTexture1DEXT
#define glFramebufferTexture2DEXT glpfFramebufferTexture2DEXT
#define glFramebufferTexture3DEXT glpfFramebufferTexture3DEXT
#define glGenFramebuffersEXT glpfGenFramebuffersEXT
#define glGenRenderbuffersEXT glpfGenRenderbuffersEXT
#define glGenerateMipmapEXT glpfGenerateMipmapEXT
#define glGetFramebufferAttachmentParameterivEXT glpfGetFramebufferAttachmentParameterivEXT
#define glGetRenderbufferParameterivEXT glpfGetRenderbufferParameterivEXT
#define glIsFramebufferEXT glpfIsFramebufferEXT
#define glIsRenderbufferEXT glpfIsRenderbufferEXT
#define glRenderbufferStorageEXT glpfRenderbufferStorageEXT


/* GL_EXT_texture_filter_anisotropic */





/* GL_EXT_transform_feedback */

typedef void (APIENTRY PFNGLBEGINTRANSFORMFEEDBACKEXT_PROC (GLenum primitiveMode));
typedef void (APIENTRY PFNGLBINDBUFFERBASEEXT_PROC (GLenum target, GLuint index, GLuint buffer));
typedef void (APIENTRY PFNGLBINDBUFFEROFFSETEXT_PROC (GLenum target, GLuint index, GLuint buffer, GLintptr offset));
typedef void (APIENTRY PFNGLBINDBUFFERRANGEEXT_PROC (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size));
typedef void (APIENTRY PFNGLENDTRANSFORMFEEDBACKEXT_PROC (void));
typedef void (APIENTRY PFNGLGETTRANSFORMFEEDBACKVARYINGEXT_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLTRANSFORMFEEDBACKVARYINGSEXT_PROC (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode));

GLAPI PFNGLBEGINTRANSFORMFEEDBACKEXT_PROC* glpfBeginTransformFeedbackEXT;
GLAPI PFNGLBINDBUFFERBASEEXT_PROC* glpfBindBufferBaseEXT;
GLAPI PFNGLBINDBUFFEROFFSETEXT_PROC* glpfBindBufferOffsetEXT;
GLAPI PFNGLBINDBUFFERRANGEEXT_PROC* glpfBindBufferRangeEXT;
GLAPI PFNGLENDTRANSFORMFEEDBACKEXT_PROC* glpfEndTransformFeedbackEXT;
GLAPI PFNGLGETTRANSFORMFEEDBACKVARYINGEXT_PROC* glpfGetTransformFeedbackVaryingEXT;
GLAPI PFNGLTRANSFORMFEEDBACKVARYINGSEXT_PROC* glpfTransformFeedbackVaryingsEXT;

#define glBeginTransformFeedbackEXT glpfBeginTransformFeedbackEXT
#define glBindBufferBaseEXT glpfBindBufferBaseEXT
#define glBindBufferOffsetEXT glpfBindBufferOffsetEXT
#define glBindBufferRangeEXT glpfBindBufferRangeEXT
#define glEndTransformFeedbackEXT glpfEndTransformFeedbackEXT
#define glGetTransformFeedbackVaryingEXT glpfGetTransformFeedbackVaryingEXT
#define glTransformFeedbackVaryingsEXT glpfTransformFeedbackVaryingsEXT


/* GL_VERSION_1_0 */

GLAPI void APIENTRY glAccum (GLenum op, GLfloat value);
GLAPI void APIENTRY glAlphaFunc (GLenum func, GLfloat ref);
GLAPI void APIENTRY glBegin (GLenum mode);
GLAPI void APIENTRY glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
GLAPI void APIENTRY glCallList (GLuint list);
GLAPI void APIENTRY glCallLists (GLsizei n, GLenum type, const void * lists);
GLAPI void APIENTRY glClear (GLbitfield mask);
GLAPI void APIENTRY glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI void APIENTRY glClearDepth (GLdouble depth);
GLAPI void APIENTRY glClearIndex (GLfloat c);
GLAPI void APIENTRY glClearStencil (GLint s);
GLAPI void APIENTRY glClipPlane (GLenum plane, const GLdouble * equation);
GLAPI void APIENTRY glColor3b (GLbyte red, GLbyte green, GLbyte blue);
GLAPI void APIENTRY glColor3bv (const GLbyte * v);
GLAPI void APIENTRY glColor3d (GLdouble red, GLdouble green, GLdouble blue);
GLAPI void APIENTRY glColor3dv (const GLdouble * v);
GLAPI void APIENTRY glColor3f (GLfloat red, GLfloat green, GLfloat blue);
GLAPI void APIENTRY glColor3fv (const GLfloat * v);
GLAPI void APIENTRY glColor3i (GLint red, GLint green, GLint blue);
GLAPI void APIENTRY glColor3iv (const GLint * v);
GLAPI void APIENTRY glColor3s (GLshort red, GLshort green, GLshort blue);
GLAPI void APIENTRY glColor3sv (const GLshort * v);
GLAPI void APIENTRY glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
GLAPI void APIENTRY glColor3ubv (const GLubyte * v);
GLAPI void APIENTRY glColor3ui (GLuint red, GLuint green, GLuint blue);
GLAPI void APIENTRY glColor3uiv (const GLuint * v);
GLAPI void APIENTRY glColor3us (GLushort red, GLushort green, GLushort blue);
GLAPI void APIENTRY glColor3usv (const GLushort * v);
GLAPI void APIENTRY glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLAPI void APIENTRY glColor4bv (const GLbyte * v);
GLAPI void APIENTRY glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLAPI void APIENTRY glColor4dv (const GLdouble * v);
GLAPI void APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI void APIENTRY glColor4fv (const GLfloat * v);
GLAPI void APIENTRY glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
GLAPI void APIENTRY glColor4iv (const GLint * v);
GLAPI void APIENTRY glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLAPI void APIENTRY glColor4sv (const GLshort * v);
GLAPI void APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLAPI void APIENTRY glColor4ubv (const GLubyte * v);
GLAPI void APIENTRY glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLAPI void APIENTRY glColor4uiv (const GLuint * v);
GLAPI void APIENTRY glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLAPI void APIENTRY glColor4usv (const GLushort * v);
GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLAPI void APIENTRY glColorMaterial (GLenum face, GLenum mode);
GLAPI void APIENTRY glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLAPI void APIENTRY glCullFace (GLenum mode);
GLAPI void APIENTRY glDeleteLists (GLuint list, GLsizei range);
GLAPI void APIENTRY glDepthFunc (GLenum func);
GLAPI void APIENTRY glDepthMask (GLboolean flag);
GLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);
GLAPI void APIENTRY glDisable (GLenum cap);
GLAPI void APIENTRY glDrawBuffer (GLenum buf);
GLAPI void APIENTRY glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glEdgeFlag (GLboolean flag);
GLAPI void APIENTRY glEdgeFlagv (const GLboolean * flag);
GLAPI void APIENTRY glEnable (GLenum cap);
GLAPI void APIENTRY glEnd (void);
GLAPI void APIENTRY glEndList (void);
GLAPI void APIENTRY glEvalCoord1d (GLdouble u);
GLAPI void APIENTRY glEvalCoord1dv (const GLdouble * u);
GLAPI void APIENTRY glEvalCoord1f (GLfloat u);
GLAPI void APIENTRY glEvalCoord1fv (const GLfloat * u);
GLAPI void APIENTRY glEvalCoord2d (GLdouble u, GLdouble v);
GLAPI void APIENTRY glEvalCoord2dv (const GLdouble * u);
GLAPI void APIENTRY glEvalCoord2f (GLfloat u, GLfloat v);
GLAPI void APIENTRY glEvalCoord2fv (const GLfloat * u);
GLAPI void APIENTRY glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
GLAPI void APIENTRY glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLAPI void APIENTRY glEvalPoint1 (GLint i);
GLAPI void APIENTRY glEvalPoint2 (GLint i, GLint j);
GLAPI void APIENTRY glFeedbackBuffer (GLsizei size, GLenum type, GLfloat * buffer);
GLAPI void APIENTRY glFinish (void);
GLAPI void APIENTRY glFlush (void);
GLAPI void APIENTRY glFogf (GLenum pname, GLfloat param);
GLAPI void APIENTRY glFogfv (GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glFogi (GLenum pname, GLint param);
GLAPI void APIENTRY glFogiv (GLenum pname, const GLint * params);
GLAPI void APIENTRY glFrontFace (GLenum mode);
GLAPI void APIENTRY glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI GLuint APIENTRY glGenLists (GLsizei range);
GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean * data);
GLAPI void APIENTRY glGetClipPlane (GLenum plane, GLdouble * equation);
GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble * data);
GLAPI GLenum APIENTRY glGetError (void);
GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat * data);
GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint * data);
GLAPI void APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetLightiv (GLenum light, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetMapdv (GLenum target, GLenum query, GLdouble * v);
GLAPI void APIENTRY glGetMapfv (GLenum target, GLenum query, GLfloat * v);
GLAPI void APIENTRY glGetMapiv (GLenum target, GLenum query, GLint * v);
GLAPI void APIENTRY glGetMaterialfv (GLenum face, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetMaterialiv (GLenum face, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetPixelMapfv (GLenum map, GLfloat * values);
GLAPI void APIENTRY glGetPixelMapuiv (GLenum map, GLuint * values);
GLAPI void APIENTRY glGetPixelMapusv (GLenum map, GLushort * values);
GLAPI void APIENTRY glGetPolygonStipple (GLubyte * mask);
GLAPI const GLubyte * APIENTRY glGetString (GLenum name);
GLAPI void APIENTRY glGetTexEnvfv (GLenum target, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexEnviv (GLenum target, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetTexGendv (GLenum coord, GLenum pname, GLdouble * params);
GLAPI void APIENTRY glGetTexGenfv (GLenum coord, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexGeniv (GLenum coord, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint * params);
GLAPI void APIENTRY glHint (GLenum target, GLenum mode);
GLAPI void APIENTRY glIndexMask (GLuint mask);
GLAPI void APIENTRY glIndexd (GLdouble c);
GLAPI void APIENTRY glIndexdv (const GLdouble * c);
GLAPI void APIENTRY glIndexf (GLfloat c);
GLAPI void APIENTRY glIndexfv (const GLfloat * c);
GLAPI void APIENTRY glIndexi (GLint c);
GLAPI void APIENTRY glIndexiv (const GLint * c);
GLAPI void APIENTRY glIndexs (GLshort c);
GLAPI void APIENTRY glIndexsv (const GLshort * c);
GLAPI void APIENTRY glInitNames (void);
GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);
GLAPI GLboolean APIENTRY glIsList (GLuint list);
GLAPI void APIENTRY glLightModelf (GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightModelfv (GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glLightModeli (GLenum pname, GLint param);
GLAPI void APIENTRY glLightModeliv (GLenum pname, const GLint * params);
GLAPI void APIENTRY glLightf (GLenum light, GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glLighti (GLenum light, GLenum pname, GLint param);
GLAPI void APIENTRY glLightiv (GLenum light, GLenum pname, const GLint * params);
GLAPI void APIENTRY glLineStipple (GLint factor, GLushort pattern);
GLAPI void APIENTRY glLineWidth (GLfloat width);
GLAPI void APIENTRY glListBase (GLuint base);
GLAPI void APIENTRY glLoadIdentity (void);
GLAPI void APIENTRY glLoadMatrixd (const GLdouble * m);
GLAPI void APIENTRY glLoadMatrixf (const GLfloat * m);
GLAPI void APIENTRY glLoadName (GLuint name);
GLAPI void APIENTRY glLogicOp (GLenum opcode);
GLAPI void APIENTRY glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLAPI void APIENTRY glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLAPI void APIENTRY glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLAPI void APIENTRY glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLAPI void APIENTRY glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
GLAPI void APIENTRY glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
GLAPI void APIENTRY glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLAPI void APIENTRY glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLAPI void APIENTRY glMaterialf (GLenum face, GLenum pname, GLfloat param);
GLAPI void APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glMateriali (GLenum face, GLenum pname, GLint param);
GLAPI void APIENTRY glMaterialiv (GLenum face, GLenum pname, const GLint * params);
GLAPI void APIENTRY glMatrixMode (GLenum mode);
GLAPI void APIENTRY glMultMatrixd (const GLdouble * m);
GLAPI void APIENTRY glMultMatrixf (const GLfloat * m);
GLAPI void APIENTRY glNewList (GLuint list, GLenum mode);
GLAPI void APIENTRY glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
GLAPI void APIENTRY glNormal3bv (const GLbyte * v);
GLAPI void APIENTRY glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
GLAPI void APIENTRY glNormal3dv (const GLdouble * v);
GLAPI void APIENTRY glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
GLAPI void APIENTRY glNormal3fv (const GLfloat * v);
GLAPI void APIENTRY glNormal3i (GLint nx, GLint ny, GLint nz);
GLAPI void APIENTRY glNormal3iv (const GLint * v);
GLAPI void APIENTRY glNormal3s (GLshort nx, GLshort ny, GLshort nz);
GLAPI void APIENTRY glNormal3sv (const GLshort * v);
GLAPI void APIENTRY glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI void APIENTRY glPassThrough (GLfloat token);
GLAPI void APIENTRY glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat * values);
GLAPI void APIENTRY glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint * values);
GLAPI void APIENTRY glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort * values);
GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);
GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);
GLAPI void APIENTRY glPixelTransferf (GLenum pname, GLfloat param);
GLAPI void APIENTRY glPixelTransferi (GLenum pname, GLint param);
GLAPI void APIENTRY glPixelZoom (GLfloat xfactor, GLfloat yfactor);
GLAPI void APIENTRY glPointSize (GLfloat size);
GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);
GLAPI void APIENTRY glPolygonStipple (const GLubyte * mask);
GLAPI void APIENTRY glPopAttrib (void);
GLAPI void APIENTRY glPopMatrix (void);
GLAPI void APIENTRY glPopName (void);
GLAPI void APIENTRY glPushAttrib (GLbitfield mask);
GLAPI void APIENTRY glPushMatrix (void);
GLAPI void APIENTRY glPushName (GLuint name);
GLAPI void APIENTRY glRasterPos2d (GLdouble x, GLdouble y);
GLAPI void APIENTRY glRasterPos2dv (const GLdouble * v);
GLAPI void APIENTRY glRasterPos2f (GLfloat x, GLfloat y);
GLAPI void APIENTRY glRasterPos2fv (const GLfloat * v);
GLAPI void APIENTRY glRasterPos2i (GLint x, GLint y);
GLAPI void APIENTRY glRasterPos2iv (const GLint * v);
GLAPI void APIENTRY glRasterPos2s (GLshort x, GLshort y);
GLAPI void APIENTRY glRasterPos2sv (const GLshort * v);
GLAPI void APIENTRY glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glRasterPos3dv (const GLdouble * v);
GLAPI void APIENTRY glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glRasterPos3fv (const GLfloat * v);
GLAPI void APIENTRY glRasterPos3i (GLint x, GLint y, GLint z);
GLAPI void APIENTRY glRasterPos3iv (const GLint * v);
GLAPI void APIENTRY glRasterPos3s (GLshort x, GLshort y, GLshort z);
GLAPI void APIENTRY glRasterPos3sv (const GLshort * v);
GLAPI void APIENTRY glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLAPI void APIENTRY glRasterPos4dv (const GLdouble * v);
GLAPI void APIENTRY glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLAPI void APIENTRY glRasterPos4fv (const GLfloat * v);
GLAPI void APIENTRY glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
GLAPI void APIENTRY glRasterPos4iv (const GLint * v);
GLAPI void APIENTRY glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLAPI void APIENTRY glRasterPos4sv (const GLshort * v);
GLAPI void APIENTRY glReadBuffer (GLenum src);
GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLAPI void APIENTRY glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLAPI void APIENTRY glRectdv (const GLdouble * v1, const GLdouble * v2);
GLAPI void APIENTRY glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLAPI void APIENTRY glRectfv (const GLfloat * v1, const GLfloat * v2);
GLAPI void APIENTRY glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
GLAPI void APIENTRY glRectiv (const GLint * v1, const GLint * v2);
GLAPI void APIENTRY glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLAPI void APIENTRY glRectsv (const GLshort * v1, const GLshort * v2);
GLAPI GLint APIENTRY glRenderMode (GLenum mode);
GLAPI void APIENTRY glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glScaled (GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glScalef (GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glSelectBuffer (GLsizei size, GLuint * buffer);
GLAPI void APIENTRY glShadeModel (GLenum mode);
GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
GLAPI void APIENTRY glStencilMask (GLuint mask);
GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
GLAPI void APIENTRY glTexCoord1d (GLdouble s);
GLAPI void APIENTRY glTexCoord1dv (const GLdouble * v);
GLAPI void APIENTRY glTexCoord1f (GLfloat s);
GLAPI void APIENTRY glTexCoord1fv (const GLfloat * v);
GLAPI void APIENTRY glTexCoord1i (GLint s);
GLAPI void APIENTRY glTexCoord1iv (const GLint * v);
GLAPI void APIENTRY glTexCoord1s (GLshort s);
GLAPI void APIENTRY glTexCoord1sv (const GLshort * v);
GLAPI void APIENTRY glTexCoord2d (GLdouble s, GLdouble t);
GLAPI void APIENTRY glTexCoord2dv (const GLdouble * v);
GLAPI void APIENTRY glTexCoord2f (GLfloat s, GLfloat t);
GLAPI void APIENTRY glTexCoord2fv (const GLfloat * v);
GLAPI void APIENTRY glTexCoord2i (GLint s, GLint t);
GLAPI void APIENTRY glTexCoord2iv (const GLint * v);
GLAPI void APIENTRY glTexCoord2s (GLshort s, GLshort t);
GLAPI void APIENTRY glTexCoord2sv (const GLshort * v);
GLAPI void APIENTRY glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
GLAPI void APIENTRY glTexCoord3dv (const GLdouble * v);
GLAPI void APIENTRY glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
GLAPI void APIENTRY glTexCoord3fv (const GLfloat * v);
GLAPI void APIENTRY glTexCoord3i (GLint s, GLint t, GLint r);
GLAPI void APIENTRY glTexCoord3iv (const GLint * v);
GLAPI void APIENTRY glTexCoord3s (GLshort s, GLshort t, GLshort r);
GLAPI void APIENTRY glTexCoord3sv (const GLshort * v);
GLAPI void APIENTRY glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLAPI void APIENTRY glTexCoord4dv (const GLdouble * v);
GLAPI void APIENTRY glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLAPI void APIENTRY glTexCoord4fv (const GLfloat * v);
GLAPI void APIENTRY glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
GLAPI void APIENTRY glTexCoord4iv (const GLint * v);
GLAPI void APIENTRY glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
GLAPI void APIENTRY glTexCoord4sv (const GLshort * v);
GLAPI void APIENTRY glTexEnvf (GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glTexEnvi (GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint * params);
GLAPI void APIENTRY glTexGend (GLenum coord, GLenum pname, GLdouble param);
GLAPI void APIENTRY glTexGendv (GLenum coord, GLenum pname, const GLdouble * params);
GLAPI void APIENTRY glTexGenf (GLenum coord, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexGenfv (GLenum coord, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glTexGeni (GLenum coord, GLenum pname, GLint param);
GLAPI void APIENTRY glTexGeniv (GLenum coord, GLenum pname, const GLint * params);
GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint * params);
GLAPI void APIENTRY glTranslated (GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glVertex2d (GLdouble x, GLdouble y);
GLAPI void APIENTRY glVertex2dv (const GLdouble * v);
GLAPI void APIENTRY glVertex2f (GLfloat x, GLfloat y);
GLAPI void APIENTRY glVertex2fv (const GLfloat * v);
GLAPI void APIENTRY glVertex2i (GLint x, GLint y);
GLAPI void APIENTRY glVertex2iv (const GLint * v);
GLAPI void APIENTRY glVertex2s (GLshort x, GLshort y);
GLAPI void APIENTRY glVertex2sv (const GLshort * v);
GLAPI void APIENTRY glVertex3d (GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glVertex3dv (const GLdouble * v);
GLAPI void APIENTRY glVertex3f (GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glVertex3fv (const GLfloat * v);
GLAPI void APIENTRY glVertex3i (GLint x, GLint y, GLint z);
GLAPI void APIENTRY glVertex3iv (const GLint * v);
GLAPI void APIENTRY glVertex3s (GLshort x, GLshort y, GLshort z);
GLAPI void APIENTRY glVertex3sv (const GLshort * v);
GLAPI void APIENTRY glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLAPI void APIENTRY glVertex4dv (const GLdouble * v);
GLAPI void APIENTRY glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLAPI void APIENTRY glVertex4fv (const GLfloat * v);
GLAPI void APIENTRY glVertex4i (GLint x, GLint y, GLint z, GLint w);
GLAPI void APIENTRY glVertex4iv (const GLint * v);
GLAPI void APIENTRY glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLAPI void APIENTRY glVertex4sv (const GLshort * v);
GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);


/* GL_VERSION_1_1 */

GLAPI GLboolean APIENTRY glAreTexturesResident (GLsizei n, const GLuint * textures, GLboolean * residences);
GLAPI void APIENTRY glArrayElement (GLint i);
GLAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);
GLAPI void APIENTRY glColorPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint * textures);
GLAPI void APIENTRY glDisableClientState (GLenum array);
GLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);
GLAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void * indices);
GLAPI void APIENTRY glEdgeFlagPointer (GLsizei stride, const void * pointer);
GLAPI void APIENTRY glEnableClientState (GLenum array);
GLAPI void APIENTRY glGenTextures (GLsizei n, GLuint * textures);
GLAPI void APIENTRY glGetPointerv (GLenum pname, void ** params);
GLAPI void APIENTRY glIndexPointer (GLenum type, GLsizei stride, const void * pointer);
GLAPI void APIENTRY glIndexub (GLubyte c);
GLAPI void APIENTRY glIndexubv (const GLubyte * c);
GLAPI void APIENTRY glInterleavedArrays (GLenum format, GLsizei stride, const void * pointer);
GLAPI GLboolean APIENTRY glIsTexture (GLuint texture);
GLAPI void APIENTRY glNormalPointer (GLenum type, GLsizei stride, const void * pointer);
GLAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);
GLAPI void APIENTRY glPopClientAttrib (void);
GLAPI void APIENTRY glPrioritizeTextures (GLsizei n, const GLuint * textures, const GLfloat * priorities);
GLAPI void APIENTRY glPushClientAttrib (GLbitfield mask);
GLAPI void APIENTRY glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glVertexPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);


/* GL_VERSION_1_2 */

typedef void (APIENTRY PFNGLCOPYTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLDRAWRANGEELEMENTS_PROC (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices));
typedef void (APIENTRY PFNGLTEXIMAGE3D_PROC (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels));

GLAPI PFNGLCOPYTEXSUBIMAGE3D_PROC* glpfCopyTexSubImage3D;
GLAPI PFNGLDRAWRANGEELEMENTS_PROC* glpfDrawRangeElements;
GLAPI PFNGLTEXIMAGE3D_PROC* glpfTexImage3D;
GLAPI PFNGLTEXSUBIMAGE3D_PROC* glpfTexSubImage3D;

#define glCopyTexSubImage3D glpfCopyTexSubImage3D
#define glDrawRangeElements glpfDrawRangeElements
#define glTexImage3D glpfTexImage3D
#define glTexSubImage3D glpfTexSubImage3D


/* GL_VERSION_1_3 */

typedef void (APIENTRY PFNGLACTIVETEXTURE_PROC (GLenum texture));
typedef void (APIENTRY PFNGLCLIENTACTIVETEXTURE_PROC (GLenum texture));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE1D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE2D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE3D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE1D_PROC (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE2D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLGETCOMPRESSEDTEXIMAGE_PROC (GLenum target, GLint level, void * img));
typedef void (APIENTRY PFNGLLOADTRANSPOSEMATRIXD_PROC (const GLdouble * m));
typedef void (APIENTRY PFNGLLOADTRANSPOSEMATRIXF_PROC (const GLfloat * m));
typedef void (APIENTRY PFNGLMULTTRANSPOSEMATRIXD_PROC (const GLdouble * m));
typedef void (APIENTRY PFNGLMULTTRANSPOSEMATRIXF_PROC (const GLfloat * m));
typedef void (APIENTRY PFNGLMULTITEXCOORD1D_PROC (GLenum target, GLdouble s));
typedef void (APIENTRY PFNGLMULTITEXCOORD1DV_PROC (GLenum target, const GLdouble * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD1F_PROC (GLenum target, GLfloat s));
typedef void (APIENTRY PFNGLMULTITEXCOORD1FV_PROC (GLenum target, const GLfloat * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD1I_PROC (GLenum target, GLint s));
typedef void (APIENTRY PFNGLMULTITEXCOORD1IV_PROC (GLenum target, const GLint * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD1S_PROC (GLenum target, GLshort s));
typedef void (APIENTRY PFNGLMULTITEXCOORD1SV_PROC (GLenum target, const GLshort * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD2D_PROC (GLenum target, GLdouble s, GLdouble t));
typedef void (APIENTRY PFNGLMULTITEXCOORD2DV_PROC (GLenum target, const GLdouble * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD2F_PROC (GLenum target, GLfloat s, GLfloat t));
typedef void (APIENTRY PFNGLMULTITEXCOORD2FV_PROC (GLenum target, const GLfloat * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD2I_PROC (GLenum target, GLint s, GLint t));
typedef void (APIENTRY PFNGLMULTITEXCOORD2IV_PROC (GLenum target, const GLint * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD2S_PROC (GLenum target, GLshort s, GLshort t));
typedef void (APIENTRY PFNGLMULTITEXCOORD2SV_PROC (GLenum target, const GLshort * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD3D_PROC (GLenum target, GLdouble s, GLdouble t, GLdouble r));
typedef void (APIENTRY PFNGLMULTITEXCOORD3DV_PROC (GLenum target, const GLdouble * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD3F_PROC (GLenum target, GLfloat s, GLfloat t, GLfloat r));
typedef void (APIENTRY PFNGLMULTITEXCOORD3FV_PROC (GLenum target, const GLfloat * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD3I_PROC (GLenum target, GLint s, GLint t, GLint r));
typedef void (APIENTRY PFNGLMULTITEXCOORD3IV_PROC (GLenum target, const GLint * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD3S_PROC (GLenum target, GLshort s, GLshort t, GLshort r));
typedef void (APIENTRY PFNGLMULTITEXCOORD3SV_PROC (GLenum target, const GLshort * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD4D_PROC (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q));
typedef void (APIENTRY PFNGLMULTITEXCOORD4DV_PROC (GLenum target, const GLdouble * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD4F_PROC (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q));
typedef void (APIENTRY PFNGLMULTITEXCOORD4FV_PROC (GLenum target, const GLfloat * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD4I_PROC (GLenum target, GLint s, GLint t, GLint r, GLint q));
typedef void (APIENTRY PFNGLMULTITEXCOORD4IV_PROC (GLenum target, const GLint * v));
typedef void (APIENTRY PFNGLMULTITEXCOORD4S_PROC (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q));
typedef void (APIENTRY PFNGLMULTITEXCOORD4SV_PROC (GLenum target, const GLshort * v));
typedef void (APIENTRY PFNGLSAMPLECOVERAGE_PROC (GLfloat value, GLboolean invert));

GLAPI PFNGLACTIVETEXTURE_PROC* glpfActiveTexture;
GLAPI PFNGLCLIENTACTIVETEXTURE_PROC* glpfClientActiveTexture;
GLAPI PFNGLCOMPRESSEDTEXIMAGE1D_PROC* glpfCompressedTexImage1D;
GLAPI PFNGLCOMPRESSEDTEXIMAGE2D_PROC* glpfCompressedTexImage2D;
GLAPI PFNGLCOMPRESSEDTEXIMAGE3D_PROC* glpfCompressedTexImage3D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1D_PROC* glpfCompressedTexSubImage1D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2D_PROC* glpfCompressedTexSubImage2D;
GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3D_PROC* glpfCompressedTexSubImage3D;
GLAPI PFNGLGETCOMPRESSEDTEXIMAGE_PROC* glpfGetCompressedTexImage;
GLAPI PFNGLLOADTRANSPOSEMATRIXD_PROC* glpfLoadTransposeMatrixd;
GLAPI PFNGLLOADTRANSPOSEMATRIXF_PROC* glpfLoadTransposeMatrixf;
GLAPI PFNGLMULTTRANSPOSEMATRIXD_PROC* glpfMultTransposeMatrixd;
GLAPI PFNGLMULTTRANSPOSEMATRIXF_PROC* glpfMultTransposeMatrixf;
GLAPI PFNGLMULTITEXCOORD1D_PROC* glpfMultiTexCoord1d;
GLAPI PFNGLMULTITEXCOORD1DV_PROC* glpfMultiTexCoord1dv;
GLAPI PFNGLMULTITEXCOORD1F_PROC* glpfMultiTexCoord1f;
GLAPI PFNGLMULTITEXCOORD1FV_PROC* glpfMultiTexCoord1fv;
GLAPI PFNGLMULTITEXCOORD1I_PROC* glpfMultiTexCoord1i;
GLAPI PFNGLMULTITEXCOORD1IV_PROC* glpfMultiTexCoord1iv;
GLAPI PFNGLMULTITEXCOORD1S_PROC* glpfMultiTexCoord1s;
GLAPI PFNGLMULTITEXCOORD1SV_PROC* glpfMultiTexCoord1sv;
GLAPI PFNGLMULTITEXCOORD2D_PROC* glpfMultiTexCoord2d;
GLAPI PFNGLMULTITEXCOORD2DV_PROC* glpfMultiTexCoord2dv;
GLAPI PFNGLMULTITEXCOORD2F_PROC* glpfMultiTexCoord2f;
GLAPI PFNGLMULTITEXCOORD2FV_PROC* glpfMultiTexCoord2fv;
GLAPI PFNGLMULTITEXCOORD2I_PROC* glpfMultiTexCoord2i;
GLAPI PFNGLMULTITEXCOORD2IV_PROC* glpfMultiTexCoord2iv;
GLAPI PFNGLMULTITEXCOORD2S_PROC* glpfMultiTexCoord2s;
GLAPI PFNGLMULTITEXCOORD2SV_PROC* glpfMultiTexCoord2sv;
GLAPI PFNGLMULTITEXCOORD3D_PROC* glpfMultiTexCoord3d;
GLAPI PFNGLMULTITEXCOORD3DV_PROC* glpfMultiTexCoord3dv;
GLAPI PFNGLMULTITEXCOORD3F_PROC* glpfMultiTexCoord3f;
GLAPI PFNGLMULTITEXCOORD3FV_PROC* glpfMultiTexCoord3fv;
GLAPI PFNGLMULTITEXCOORD3I_PROC* glpfMultiTexCoord3i;
GLAPI PFNGLMULTITEXCOORD3IV_PROC* glpfMultiTexCoord3iv;
GLAPI PFNGLMULTITEXCOORD3S_PROC* glpfMultiTexCoord3s;
GLAPI PFNGLMULTITEXCOORD3SV_PROC* glpfMultiTexCoord3sv;
GLAPI PFNGLMULTITEXCOORD4D_PROC* glpfMultiTexCoord4d;
GLAPI PFNGLMULTITEXCOORD4DV_PROC* glpfMultiTexCoord4dv;
GLAPI PFNGLMULTITEXCOORD4F_PROC* glpfMultiTexCoord4f;
GLAPI PFNGLMULTITEXCOORD4FV_PROC* glpfMultiTexCoord4fv;
GLAPI PFNGLMULTITEXCOORD4I_PROC* glpfMultiTexCoord4i;
GLAPI PFNGLMULTITEXCOORD4IV_PROC* glpfMultiTexCoord4iv;
GLAPI PFNGLMULTITEXCOORD4S_PROC* glpfMultiTexCoord4s;
GLAPI PFNGLMULTITEXCOORD4SV_PROC* glpfMultiTexCoord4sv;
GLAPI PFNGLSAMPLECOVERAGE_PROC* glpfSampleCoverage;

#define glActiveTexture glpfActiveTexture
#define glClientActiveTexture glpfClientActiveTexture
#define glCompressedTexImage1D glpfCompressedTexImage1D
#define glCompressedTexImage2D glpfCompressedTexImage2D
#define glCompressedTexImage3D glpfCompressedTexImage3D
#define glCompressedTexSubImage1D glpfCompressedTexSubImage1D
#define glCompressedTexSubImage2D glpfCompressedTexSubImage2D
#define glCompressedTexSubImage3D glpfCompressedTexSubImage3D
#define glGetCompressedTexImage glpfGetCompressedTexImage
#define glLoadTransposeMatrixd glpfLoadTransposeMatrixd
#define glLoadTransposeMatrixf glpfLoadTransposeMatrixf
#define glMultTransposeMatrixd glpfMultTransposeMatrixd
#define glMultTransposeMatrixf glpfMultTransposeMatrixf
#define glMultiTexCoord1d glpfMultiTexCoord1d
#define glMultiTexCoord1dv glpfMultiTexCoord1dv
#define glMultiTexCoord1f glpfMultiTexCoord1f
#define glMultiTexCoord1fv glpfMultiTexCoord1fv
#define glMultiTexCoord1i glpfMultiTexCoord1i
#define glMultiTexCoord1iv glpfMultiTexCoord1iv
#define glMultiTexCoord1s glpfMultiTexCoord1s
#define glMultiTexCoord1sv glpfMultiTexCoord1sv
#define glMultiTexCoord2d glpfMultiTexCoord2d
#define glMultiTexCoord2dv glpfMultiTexCoord2dv
#define glMultiTexCoord2f glpfMultiTexCoord2f
#define glMultiTexCoord2fv glpfMultiTexCoord2fv
#define glMultiTexCoord2i glpfMultiTexCoord2i
#define glMultiTexCoord2iv glpfMultiTexCoord2iv
#define glMultiTexCoord2s glpfMultiTexCoord2s
#define glMultiTexCoord2sv glpfMultiTexCoord2sv
#define glMultiTexCoord3d glpfMultiTexCoord3d
#define glMultiTexCoord3dv glpfMultiTexCoord3dv
#define glMultiTexCoord3f glpfMultiTexCoord3f
#define glMultiTexCoord3fv glpfMultiTexCoord3fv
#define glMultiTexCoord3i glpfMultiTexCoord3i
#define glMultiTexCoord3iv glpfMultiTexCoord3iv
#define glMultiTexCoord3s glpfMultiTexCoord3s
#define glMultiTexCoord3sv glpfMultiTexCoord3sv
#define glMultiTexCoord4d glpfMultiTexCoord4d
#define glMultiTexCoord4dv glpfMultiTexCoord4dv
#define glMultiTexCoord4f glpfMultiTexCoord4f
#define glMultiTexCoord4fv glpfMultiTexCoord4fv
#define glMultiTexCoord4i glpfMultiTexCoord4i
#define glMultiTexCoord4iv glpfMultiTexCoord4iv
#define glMultiTexCoord4s glpfMultiTexCoord4s
#define glMultiTexCoord4sv glpfMultiTexCoord4sv
#define glSampleCoverage glpfSampleCoverage


/* GL_VERSION_1_4 */

typedef void (APIENTRY PFNGLBLENDCOLOR_PROC (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha));
typedef void (APIENTRY PFNGLBLENDEQUATION_PROC (GLenum mode));
typedef void (APIENTRY PFNGLBLENDFUNCSEPARATE_PROC (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha));
typedef void (APIENTRY PFNGLFOGCOORDPOINTER_PROC (GLenum type, GLsizei stride, const void * pointer));
typedef void (APIENTRY PFNGLFOGCOORDD_PROC (GLdouble coord));
typedef void (APIENTRY PFNGLFOGCOORDDV_PROC (const GLdouble * coord));
typedef void (APIENTRY PFNGLFOGCOORDF_PROC (GLfloat coord));
typedef void (APIENTRY PFNGLFOGCOORDFV_PROC (const GLfloat * coord));
typedef void (APIENTRY PFNGLMULTIDRAWARRAYS_PROC (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount));
typedef void (APIENTRY PFNGLMULTIDRAWELEMENTS_PROC (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount));
typedef void (APIENTRY PFNGLPOINTPARAMETERF_PROC (GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLPOINTPARAMETERFV_PROC (GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLPOINTPARAMETERI_PROC (GLenum pname, GLint param));
typedef void (APIENTRY PFNGLPOINTPARAMETERIV_PROC (GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3B_PROC (GLbyte red, GLbyte green, GLbyte blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3BV_PROC (const GLbyte * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3D_PROC (GLdouble red, GLdouble green, GLdouble blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3DV_PROC (const GLdouble * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3F_PROC (GLfloat red, GLfloat green, GLfloat blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3FV_PROC (const GLfloat * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3I_PROC (GLint red, GLint green, GLint blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3IV_PROC (const GLint * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3S_PROC (GLshort red, GLshort green, GLshort blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3SV_PROC (const GLshort * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3UB_PROC (GLubyte red, GLubyte green, GLubyte blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3UBV_PROC (const GLubyte * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3UI_PROC (GLuint red, GLuint green, GLuint blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3UIV_PROC (const GLuint * v));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3US_PROC (GLushort red, GLushort green, GLushort blue));
typedef void (APIENTRY PFNGLSECONDARYCOLOR3USV_PROC (const GLushort * v));
typedef void (APIENTRY PFNGLSECONDARYCOLORPOINTER_PROC (GLint size, GLenum type, GLsizei stride, const void * pointer));
typedef void (APIENTRY PFNGLWINDOWPOS2D_PROC (GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLWINDOWPOS2DV_PROC (const GLdouble * v));
typedef void (APIENTRY PFNGLWINDOWPOS2F_PROC (GLfloat x, GLfloat y));
typedef void (APIENTRY PFNGLWINDOWPOS2FV_PROC (const GLfloat * v));
typedef void (APIENTRY PFNGLWINDOWPOS2I_PROC (GLint x, GLint y));
typedef void (APIENTRY PFNGLWINDOWPOS2IV_PROC (const GLint * v));
typedef void (APIENTRY PFNGLWINDOWPOS2S_PROC (GLshort x, GLshort y));
typedef void (APIENTRY PFNGLWINDOWPOS2SV_PROC (const GLshort * v));
typedef void (APIENTRY PFNGLWINDOWPOS3D_PROC (GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLWINDOWPOS3DV_PROC (const GLdouble * v));
typedef void (APIENTRY PFNGLWINDOWPOS3F_PROC (GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLWINDOWPOS3FV_PROC (const GLfloat * v));
typedef void (APIENTRY PFNGLWINDOWPOS3I_PROC (GLint x, GLint y, GLint z));
typedef void (APIENTRY PFNGLWINDOWPOS3IV_PROC (const GLint * v));
typedef void (APIENTRY PFNGLWINDOWPOS3S_PROC (GLshort x, GLshort y, GLshort z));
typedef void (APIENTRY PFNGLWINDOWPOS3SV_PROC (const GLshort * v));

GLAPI PFNGLBLENDCOLOR_PROC* glpfBlendColor;
GLAPI PFNGLBLENDEQUATION_PROC* glpfBlendEquation;
GLAPI PFNGLBLENDFUNCSEPARATE_PROC* glpfBlendFuncSeparate;
GLAPI PFNGLFOGCOORDPOINTER_PROC* glpfFogCoordPointer;
GLAPI PFNGLFOGCOORDD_PROC* glpfFogCoordd;
GLAPI PFNGLFOGCOORDDV_PROC* glpfFogCoorddv;
GLAPI PFNGLFOGCOORDF_PROC* glpfFogCoordf;
GLAPI PFNGLFOGCOORDFV_PROC* glpfFogCoordfv;
GLAPI PFNGLMULTIDRAWARRAYS_PROC* glpfMultiDrawArrays;
GLAPI PFNGLMULTIDRAWELEMENTS_PROC* glpfMultiDrawElements;
GLAPI PFNGLPOINTPARAMETERF_PROC* glpfPointParameterf;
GLAPI PFNGLPOINTPARAMETERFV_PROC* glpfPointParameterfv;
GLAPI PFNGLPOINTPARAMETERI_PROC* glpfPointParameteri;
GLAPI PFNGLPOINTPARAMETERIV_PROC* glpfPointParameteriv;
GLAPI PFNGLSECONDARYCOLOR3B_PROC* glpfSecondaryColor3b;
GLAPI PFNGLSECONDARYCOLOR3BV_PROC* glpfSecondaryColor3bv;
GLAPI PFNGLSECONDARYCOLOR3D_PROC* glpfSecondaryColor3d;
GLAPI PFNGLSECONDARYCOLOR3DV_PROC* glpfSecondaryColor3dv;
GLAPI PFNGLSECONDARYCOLOR3F_PROC* glpfSecondaryColor3f;
GLAPI PFNGLSECONDARYCOLOR3FV_PROC* glpfSecondaryColor3fv;
GLAPI PFNGLSECONDARYCOLOR3I_PROC* glpfSecondaryColor3i;
GLAPI PFNGLSECONDARYCOLOR3IV_PROC* glpfSecondaryColor3iv;
GLAPI PFNGLSECONDARYCOLOR3S_PROC* glpfSecondaryColor3s;
GLAPI PFNGLSECONDARYCOLOR3SV_PROC* glpfSecondaryColor3sv;
GLAPI PFNGLSECONDARYCOLOR3UB_PROC* glpfSecondaryColor3ub;
GLAPI PFNGLSECONDARYCOLOR3UBV_PROC* glpfSecondaryColor3ubv;
GLAPI PFNGLSECONDARYCOLOR3UI_PROC* glpfSecondaryColor3ui;
GLAPI PFNGLSECONDARYCOLOR3UIV_PROC* glpfSecondaryColor3uiv;
GLAPI PFNGLSECONDARYCOLOR3US_PROC* glpfSecondaryColor3us;
GLAPI PFNGLSECONDARYCOLOR3USV_PROC* glpfSecondaryColor3usv;
GLAPI PFNGLSECONDARYCOLORPOINTER_PROC* glpfSecondaryColorPointer;
GLAPI PFNGLWINDOWPOS2D_PROC* glpfWindowPos2d;
GLAPI PFNGLWINDOWPOS2DV_PROC* glpfWindowPos2dv;
GLAPI PFNGLWINDOWPOS2F_PROC* glpfWindowPos2f;
GLAPI PFNGLWINDOWPOS2FV_PROC* glpfWindowPos2fv;
GLAPI PFNGLWINDOWPOS2I_PROC* glpfWindowPos2i;
GLAPI PFNGLWINDOWPOS2IV_PROC* glpfWindowPos2iv;
GLAPI PFNGLWINDOWPOS2S_PROC* glpfWindowPos2s;
GLAPI PFNGLWINDOWPOS2SV_PROC* glpfWindowPos2sv;
GLAPI PFNGLWINDOWPOS3D_PROC* glpfWindowPos3d;
GLAPI PFNGLWINDOWPOS3DV_PROC* glpfWindowPos3dv;
GLAPI PFNGLWINDOWPOS3F_PROC* glpfWindowPos3f;
GLAPI PFNGLWINDOWPOS3FV_PROC* glpfWindowPos3fv;
GLAPI PFNGLWINDOWPOS3I_PROC* glpfWindowPos3i;
GLAPI PFNGLWINDOWPOS3IV_PROC* glpfWindowPos3iv;
GLAPI PFNGLWINDOWPOS3S_PROC* glpfWindowPos3s;
GLAPI PFNGLWINDOWPOS3SV_PROC* glpfWindowPos3sv;

#define glBlendColor glpfBlendColor
#define glBlendEquation glpfBlendEquation
#define glBlendFuncSeparate glpfBlendFuncSeparate
#define glFogCoordPointer glpfFogCoordPointer
#define glFogCoordd glpfFogCoordd
#define glFogCoorddv glpfFogCoorddv
#define glFogCoordf glpfFogCoordf
#define glFogCoordfv glpfFogCoordfv
#define glMultiDrawArrays glpfMultiDrawArrays
#define glMultiDrawElements glpfMultiDrawElements
#define glPointParameterf glpfPointParameterf
#define glPointParameterfv glpfPointParameterfv
#define glPointParameteri glpfPointParameteri
#define glPointParameteriv glpfPointParameteriv
#define glSecondaryColor3b glpfSecondaryColor3b
#define glSecondaryColor3bv glpfSecondaryColor3bv
#define glSecondaryColor3d glpfSecondaryColor3d
#define glSecondaryColor3dv glpfSecondaryColor3dv
#define glSecondaryColor3f glpfSecondaryColor3f
#define glSecondaryColor3fv glpfSecondaryColor3fv
#define glSecondaryColor3i glpfSecondaryColor3i
#define glSecondaryColor3iv glpfSecondaryColor3iv
#define glSecondaryColor3s glpfSecondaryColor3s
#define glSecondaryColor3sv glpfSecondaryColor3sv
#define glSecondaryColor3ub glpfSecondaryColor3ub
#define glSecondaryColor3ubv glpfSecondaryColor3ubv
#define glSecondaryColor3ui glpfSecondaryColor3ui
#define glSecondaryColor3uiv glpfSecondaryColor3uiv
#define glSecondaryColor3us glpfSecondaryColor3us
#define glSecondaryColor3usv glpfSecondaryColor3usv
#define glSecondaryColorPointer glpfSecondaryColorPointer
#define glWindowPos2d glpfWindowPos2d
#define glWindowPos2dv glpfWindowPos2dv
#define glWindowPos2f glpfWindowPos2f
#define glWindowPos2fv glpfWindowPos2fv
#define glWindowPos2i glpfWindowPos2i
#define glWindowPos2iv glpfWindowPos2iv
#define glWindowPos2s glpfWindowPos2s
#define glWindowPos2sv glpfWindowPos2sv
#define glWindowPos3d glpfWindowPos3d
#define glWindowPos3dv glpfWindowPos3dv
#define glWindowPos3f glpfWindowPos3f
#define glWindowPos3fv glpfWindowPos3fv
#define glWindowPos3i glpfWindowPos3i
#define glWindowPos3iv glpfWindowPos3iv
#define glWindowPos3s glpfWindowPos3s
#define glWindowPos3sv glpfWindowPos3sv


/* GL_VERSION_1_5 */

typedef void (APIENTRY PFNGLBEGINQUERY_PROC (GLenum target, GLuint id));
typedef void (APIENTRY PFNGLBINDBUFFER_PROC (GLenum target, GLuint buffer));
typedef void (APIENTRY PFNGLBUFFERDATA_PROC (GLenum target, GLsizeiptr size, const void * data, GLenum usage));
typedef void (APIENTRY PFNGLBUFFERSUBDATA_PROC (GLenum target, GLintptr offset, GLsizeiptr size, const void * data));
typedef void (APIENTRY PFNGLDELETEBUFFERS_PROC (GLsizei n, const GLuint * buffers));
typedef void (APIENTRY PFNGLDELETEQUERIES_PROC (GLsizei n, const GLuint * ids));
typedef void (APIENTRY PFNGLENDQUERY_PROC (GLenum target));
typedef void (APIENTRY PFNGLGENBUFFERS_PROC (GLsizei n, GLuint * buffers));
typedef void (APIENTRY PFNGLGENQUERIES_PROC (GLsizei n, GLuint * ids));
typedef void (APIENTRY PFNGLGETBUFFERPARAMETERIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETBUFFERPOINTERV_PROC (GLenum target, GLenum pname, void ** params));
typedef void (APIENTRY PFNGLGETBUFFERSUBDATA_PROC (GLenum target, GLintptr offset, GLsizeiptr size, void * data));
typedef void (APIENTRY PFNGLGETQUERYOBJECTIV_PROC (GLuint id, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETQUERYOBJECTUIV_PROC (GLuint id, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETQUERYIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISBUFFER_PROC (GLuint buffer));
typedef GLboolean (APIENTRY PFNGLISQUERY_PROC (GLuint id));
typedef void * (APIENTRY PFNGLMAPBUFFER_PROC (GLenum target, GLenum access));
typedef GLboolean (APIENTRY PFNGLUNMAPBUFFER_PROC (GLenum target));

GLAPI PFNGLBEGINQUERY_PROC* glpfBeginQuery;
GLAPI PFNGLBINDBUFFER_PROC* glpfBindBuffer;
GLAPI PFNGLBUFFERDATA_PROC* glpfBufferData;
GLAPI PFNGLBUFFERSUBDATA_PROC* glpfBufferSubData;
GLAPI PFNGLDELETEBUFFERS_PROC* glpfDeleteBuffers;
GLAPI PFNGLDELETEQUERIES_PROC* glpfDeleteQueries;
GLAPI PFNGLENDQUERY_PROC* glpfEndQuery;
GLAPI PFNGLGENBUFFERS_PROC* glpfGenBuffers;
GLAPI PFNGLGENQUERIES_PROC* glpfGenQueries;
GLAPI PFNGLGETBUFFERPARAMETERIV_PROC* glpfGetBufferParameteriv;
GLAPI PFNGLGETBUFFERPOINTERV_PROC* glpfGetBufferPointerv;
GLAPI PFNGLGETBUFFERSUBDATA_PROC* glpfGetBufferSubData;
GLAPI PFNGLGETQUERYOBJECTIV_PROC* glpfGetQueryObjectiv;
GLAPI PFNGLGETQUERYOBJECTUIV_PROC* glpfGetQueryObjectuiv;
GLAPI PFNGLGETQUERYIV_PROC* glpfGetQueryiv;
GLAPI PFNGLISBUFFER_PROC* glpfIsBuffer;
GLAPI PFNGLISQUERY_PROC* glpfIsQuery;
GLAPI PFNGLMAPBUFFER_PROC* glpfMapBuffer;
GLAPI PFNGLUNMAPBUFFER_PROC* glpfUnmapBuffer;

#define glBeginQuery glpfBeginQuery
#define glBindBuffer glpfBindBuffer
#define glBufferData glpfBufferData
#define glBufferSubData glpfBufferSubData
#define glDeleteBuffers glpfDeleteBuffers
#define glDeleteQueries glpfDeleteQueries
#define glEndQuery glpfEndQuery
#define glGenBuffers glpfGenBuffers
#define glGenQueries glpfGenQueries
#define glGetBufferParameteriv glpfGetBufferParameteriv
#define glGetBufferPointerv glpfGetBufferPointerv
#define glGetBufferSubData glpfGetBufferSubData
#define glGetQueryObjectiv glpfGetQueryObjectiv
#define glGetQueryObjectuiv glpfGetQueryObjectuiv
#define glGetQueryiv glpfGetQueryiv
#define glIsBuffer glpfIsBuffer
#define glIsQuery glpfIsQuery
#define glMapBuffer glpfMapBuffer
#define glUnmapBuffer glpfUnmapBuffer


/* GL_VERSION_2_0 */

typedef void (APIENTRY PFNGLATTACHSHADER_PROC (GLuint program, GLuint shader));
typedef void (APIENTRY PFNGLBINDATTRIBLOCATION_PROC (GLuint program, GLuint index, const GLchar * name));
typedef void (APIENTRY PFNGLBLENDEQUATIONSEPARATE_PROC (GLenum modeRGB, GLenum modeAlpha));
typedef void (APIENTRY PFNGLCOMPILESHADER_PROC (GLuint shader));
typedef GLuint (APIENTRY PFNGLCREATEPROGRAM_PROC (void));
typedef GLuint (APIENTRY PFNGLCREATESHADER_PROC (GLenum type));
typedef void (APIENTRY PFNGLDELETEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLDELETESHADER_PROC (GLuint shader));
typedef void (APIENTRY PFNGLDETACHSHADER_PROC (GLuint program, GLuint shader));
typedef void (APIENTRY PFNGLDISABLEVERTEXATTRIBARRAY_PROC (GLuint index));
typedef void (APIENTRY PFNGLDRAWBUFFERS_PROC (GLsizei n, const GLenum * bufs));
typedef void (APIENTRY PFNGLENABLEVERTEXATTRIBARRAY_PROC (GLuint index));
typedef void (APIENTRY PFNGLGETACTIVEATTRIB_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORM_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLGETATTACHEDSHADERS_PROC (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders));
typedef GLint (APIENTRY PFNGLGETATTRIBLOCATION_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETPROGRAMINFOLOG_PROC (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog));
typedef void (APIENTRY PFNGLGETPROGRAMIV_PROC (GLuint program, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETSHADERINFOLOG_PROC (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog));
typedef void (APIENTRY PFNGLGETSHADERSOURCE_PROC (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source));
typedef void (APIENTRY PFNGLGETSHADERIV_PROC (GLuint shader, GLenum pname, GLint * params));
typedef GLint (APIENTRY PFNGLGETUNIFORMLOCATION_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETUNIFORMFV_PROC (GLuint program, GLint location, GLfloat * params));
typedef void (APIENTRY PFNGLGETUNIFORMIV_PROC (GLuint program, GLint location, GLint * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBPOINTERV_PROC (GLuint index, GLenum pname, void ** pointer));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBDV_PROC (GLuint index, GLenum pname, GLdouble * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBFV_PROC (GLuint index, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBIV_PROC (GLuint index, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISPROGRAM_PROC (GLuint program));
typedef GLboolean (APIENTRY PFNGLISSHADER_PROC (GLuint shader));
typedef void (APIENTRY PFNGLLINKPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLSHADERSOURCE_PROC (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length));
typedef void (APIENTRY PFNGLSTENCILFUNCSEPARATE_PROC (GLenum face, GLenum func, GLint ref, GLuint mask));
typedef void (APIENTRY PFNGLSTENCILMASKSEPARATE_PROC (GLenum face, GLuint mask));
typedef void (APIENTRY PFNGLSTENCILOPSEPARATE_PROC (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass));
typedef void (APIENTRY PFNGLUNIFORM1F_PROC (GLint location, GLfloat v0));
typedef void (APIENTRY PFNGLUNIFORM1FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM1I_PROC (GLint location, GLint v0));
typedef void (APIENTRY PFNGLUNIFORM1IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM2F_PROC (GLint location, GLfloat v0, GLfloat v1));
typedef void (APIENTRY PFNGLUNIFORM2FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM2I_PROC (GLint location, GLint v0, GLint v1));
typedef void (APIENTRY PFNGLUNIFORM2IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM3F_PROC (GLint location, GLfloat v0, GLfloat v1, GLfloat v2));
typedef void (APIENTRY PFNGLUNIFORM3FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM3I_PROC (GLint location, GLint v0, GLint v1, GLint v2));
typedef void (APIENTRY PFNGLUNIFORM3IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM4F_PROC (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3));
typedef void (APIENTRY PFNGLUNIFORM4FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM4I_PROC (GLint location, GLint v0, GLint v1, GLint v2, GLint v3));
typedef void (APIENTRY PFNGLUNIFORM4IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUSEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLVALIDATEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLVERTEXATTRIB1D_PROC (GLuint index, GLdouble x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB1F_PROC (GLuint index, GLfloat x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB1S_PROC (GLuint index, GLshort x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2D_PROC (GLuint index, GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2F_PROC (GLuint index, GLfloat x, GLfloat y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2S_PROC (GLuint index, GLshort x, GLshort y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3F_PROC (GLuint index, GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3S_PROC (GLuint index, GLshort x, GLshort y, GLshort z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NBV_PROC (GLuint index, const GLbyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NIV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NSV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUB_PROC (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUBV_PROC (GLuint index, const GLubyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUSV_PROC (GLuint index, const GLushort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4BV_PROC (GLuint index, const GLbyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4F_PROC (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4S_PROC (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4UBV_PROC (GLuint index, const GLubyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4USV_PROC (GLuint index, const GLushort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBPOINTER_PROC (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer));

GLAPI PFNGLATTACHSHADER_PROC* glpfAttachShader;
GLAPI PFNGLBINDATTRIBLOCATION_PROC* glpfBindAttribLocation;
GLAPI PFNGLBLENDEQUATIONSEPARATE_PROC* glpfBlendEquationSeparate;
GLAPI PFNGLCOMPILESHADER_PROC* glpfCompileShader;
GLAPI PFNGLCREATEPROGRAM_PROC* glpfCreateProgram;
GLAPI PFNGLCREATESHADER_PROC* glpfCreateShader;
GLAPI PFNGLDELETEPROGRAM_PROC* glpfDeleteProgram;
GLAPI PFNGLDELETESHADER_PROC* glpfDeleteShader;
GLAPI PFNGLDETACHSHADER_PROC* glpfDetachShader;
GLAPI PFNGLDISABLEVERTEXATTRIBARRAY_PROC* glpfDisableVertexAttribArray;
GLAPI PFNGLDRAWBUFFERS_PROC* glpfDrawBuffers;
GLAPI PFNGLENABLEVERTEXATTRIBARRAY_PROC* glpfEnableVertexAttribArray;
GLAPI PFNGLGETACTIVEATTRIB_PROC* glpfGetActiveAttrib;
GLAPI PFNGLGETACTIVEUNIFORM_PROC* glpfGetActiveUniform;
GLAPI PFNGLGETATTACHEDSHADERS_PROC* glpfGetAttachedShaders;
GLAPI PFNGLGETATTRIBLOCATION_PROC* glpfGetAttribLocation;
GLAPI PFNGLGETPROGRAMINFOLOG_PROC* glpfGetProgramInfoLog;
GLAPI PFNGLGETPROGRAMIV_PROC* glpfGetProgramiv;
GLAPI PFNGLGETSHADERINFOLOG_PROC* glpfGetShaderInfoLog;
GLAPI PFNGLGETSHADERSOURCE_PROC* glpfGetShaderSource;
GLAPI PFNGLGETSHADERIV_PROC* glpfGetShaderiv;
GLAPI PFNGLGETUNIFORMLOCATION_PROC* glpfGetUniformLocation;
GLAPI PFNGLGETUNIFORMFV_PROC* glpfGetUniformfv;
GLAPI PFNGLGETUNIFORMIV_PROC* glpfGetUniformiv;
GLAPI PFNGLGETVERTEXATTRIBPOINTERV_PROC* glpfGetVertexAttribPointerv;
GLAPI PFNGLGETVERTEXATTRIBDV_PROC* glpfGetVertexAttribdv;
GLAPI PFNGLGETVERTEXATTRIBFV_PROC* glpfGetVertexAttribfv;
GLAPI PFNGLGETVERTEXATTRIBIV_PROC* glpfGetVertexAttribiv;
GLAPI PFNGLISPROGRAM_PROC* glpfIsProgram;
GLAPI PFNGLISSHADER_PROC* glpfIsShader;
GLAPI PFNGLLINKPROGRAM_PROC* glpfLinkProgram;
GLAPI PFNGLSHADERSOURCE_PROC* glpfShaderSource;
GLAPI PFNGLSTENCILFUNCSEPARATE_PROC* glpfStencilFuncSeparate;
GLAPI PFNGLSTENCILMASKSEPARATE_PROC* glpfStencilMaskSeparate;
GLAPI PFNGLSTENCILOPSEPARATE_PROC* glpfStencilOpSeparate;
GLAPI PFNGLUNIFORM1F_PROC* glpfUniform1f;
GLAPI PFNGLUNIFORM1FV_PROC* glpfUniform1fv;
GLAPI PFNGLUNIFORM1I_PROC* glpfUniform1i;
GLAPI PFNGLUNIFORM1IV_PROC* glpfUniform1iv;
GLAPI PFNGLUNIFORM2F_PROC* glpfUniform2f;
GLAPI PFNGLUNIFORM2FV_PROC* glpfUniform2fv;
GLAPI PFNGLUNIFORM2I_PROC* glpfUniform2i;
GLAPI PFNGLUNIFORM2IV_PROC* glpfUniform2iv;
GLAPI PFNGLUNIFORM3F_PROC* glpfUniform3f;
GLAPI PFNGLUNIFORM3FV_PROC* glpfUniform3fv;
GLAPI PFNGLUNIFORM3I_PROC* glpfUniform3i;
GLAPI PFNGLUNIFORM3IV_PROC* glpfUniform3iv;
GLAPI PFNGLUNIFORM4F_PROC* glpfUniform4f;
GLAPI PFNGLUNIFORM4FV_PROC* glpfUniform4fv;
GLAPI PFNGLUNIFORM4I_PROC* glpfUniform4i;
GLAPI PFNGLUNIFORM4IV_PROC* glpfUniform4iv;
GLAPI PFNGLUNIFORMMATRIX2FV_PROC* glpfUniformMatrix2fv;
GLAPI PFNGLUNIFORMMATRIX3FV_PROC* glpfUniformMatrix3fv;
GLAPI PFNGLUNIFORMMATRIX4FV_PROC* glpfUniformMatrix4fv;
GLAPI PFNGLUSEPROGRAM_PROC* glpfUseProgram;
GLAPI PFNGLVALIDATEPROGRAM_PROC* glpfValidateProgram;
GLAPI PFNGLVERTEXATTRIB1D_PROC* glpfVertexAttrib1d;
GLAPI PFNGLVERTEXATTRIB1DV_PROC* glpfVertexAttrib1dv;
GLAPI PFNGLVERTEXATTRIB1F_PROC* glpfVertexAttrib1f;
GLAPI PFNGLVERTEXATTRIB1FV_PROC* glpfVertexAttrib1fv;
GLAPI PFNGLVERTEXATTRIB1S_PROC* glpfVertexAttrib1s;
GLAPI PFNGLVERTEXATTRIB1SV_PROC* glpfVertexAttrib1sv;
GLAPI PFNGLVERTEXATTRIB2D_PROC* glpfVertexAttrib2d;
GLAPI PFNGLVERTEXATTRIB2DV_PROC* glpfVertexAttrib2dv;
GLAPI PFNGLVERTEXATTRIB2F_PROC* glpfVertexAttrib2f;
GLAPI PFNGLVERTEXATTRIB2FV_PROC* glpfVertexAttrib2fv;
GLAPI PFNGLVERTEXATTRIB2S_PROC* glpfVertexAttrib2s;
GLAPI PFNGLVERTEXATTRIB2SV_PROC* glpfVertexAttrib2sv;
GLAPI PFNGLVERTEXATTRIB3D_PROC* glpfVertexAttrib3d;
GLAPI PFNGLVERTEXATTRIB3DV_PROC* glpfVertexAttrib3dv;
GLAPI PFNGLVERTEXATTRIB3F_PROC* glpfVertexAttrib3f;
GLAPI PFNGLVERTEXATTRIB3FV_PROC* glpfVertexAttrib3fv;
GLAPI PFNGLVERTEXATTRIB3S_PROC* glpfVertexAttrib3s;
GLAPI PFNGLVERTEXATTRIB3SV_PROC* glpfVertexAttrib3sv;
GLAPI PFNGLVERTEXATTRIB4NBV_PROC* glpfVertexAttrib4Nbv;
GLAPI PFNGLVERTEXATTRIB4NIV_PROC* glpfVertexAttrib4Niv;
GLAPI PFNGLVERTEXATTRIB4NSV_PROC* glpfVertexAttrib4Nsv;
GLAPI PFNGLVERTEXATTRIB4NUB_PROC* glpfVertexAttrib4Nub;
GLAPI PFNGLVERTEXATTRIB4NUBV_PROC* glpfVertexAttrib4Nubv;
GLAPI PFNGLVERTEXATTRIB4NUIV_PROC* glpfVertexAttrib4Nuiv;
GLAPI PFNGLVERTEXATTRIB4NUSV_PROC* glpfVertexAttrib4Nusv;
GLAPI PFNGLVERTEXATTRIB4BV_PROC* glpfVertexAttrib4bv;
GLAPI PFNGLVERTEXATTRIB4D_PROC* glpfVertexAttrib4d;
GLAPI PFNGLVERTEXATTRIB4DV_PROC* glpfVertexAttrib4dv;
GLAPI PFNGLVERTEXATTRIB4F_PROC* glpfVertexAttrib4f;
GLAPI PFNGLVERTEXATTRIB4FV_PROC* glpfVertexAttrib4fv;
GLAPI PFNGLVERTEXATTRIB4IV_PROC* glpfVertexAttrib4iv;
GLAPI PFNGLVERTEXATTRIB4S_PROC* glpfVertexAttrib4s;
GLAPI PFNGLVERTEXATTRIB4SV_PROC* glpfVertexAttrib4sv;
GLAPI PFNGLVERTEXATTRIB4UBV_PROC* glpfVertexAttrib4ubv;
GLAPI PFNGLVERTEXATTRIB4UIV_PROC* glpfVertexAttrib4uiv;
GLAPI PFNGLVERTEXATTRIB4USV_PROC* glpfVertexAttrib4usv;
GLAPI PFNGLVERTEXATTRIBPOINTER_PROC* glpfVertexAttribPointer;

#define glAttachShader glpfAttachShader
#define glBindAttribLocation glpfBindAttribLocation
#define glBlendEquationSeparate glpfBlendEquationSeparate
#define glCompileShader glpfCompileShader
#define glCreateProgram glpfCreateProgram
#define glCreateShader glpfCreateShader
#define glDeleteProgram glpfDeleteProgram
#define glDeleteShader glpfDeleteShader
#define glDetachShader glpfDetachShader
#define glDisableVertexAttribArray glpfDisableVertexAttribArray
#define glDrawBuffers glpfDrawBuffers
#define glEnableVertexAttribArray glpfEnableVertexAttribArray
#define glGetActiveAttrib glpfGetActiveAttrib
#define glGetActiveUniform glpfGetActiveUniform
#define glGetAttachedShaders glpfGetAttachedShaders
#define glGetAttribLocation glpfGetAttribLocation
#define glGetProgramInfoLog glpfGetProgramInfoLog
#define glGetProgramiv glpfGetProgramiv
#define glGetShaderInfoLog glpfGetShaderInfoLog
#define glGetShaderSource glpfGetShaderSource
#define glGetShaderiv glpfGetShaderiv
#define glGetUniformLocation glpfGetUniformLocation
#define glGetUniformfv glpfGetUniformfv
#define glGetUniformiv glpfGetUniformiv
#define glGetVertexAttribPointerv glpfGetVertexAttribPointerv
#define glGetVertexAttribdv glpfGetVertexAttribdv
#define glGetVertexAttribfv glpfGetVertexAttribfv
#define glGetVertexAttribiv glpfGetVertexAttribiv
#define glIsProgram glpfIsProgram
#define glIsShader glpfIsShader
#define glLinkProgram glpfLinkProgram
#define glShaderSource glpfShaderSource
#define glStencilFuncSeparate glpfStencilFuncSeparate
#define glStencilMaskSeparate glpfStencilMaskSeparate
#define glStencilOpSeparate glpfStencilOpSeparate
#define glUniform1f glpfUniform1f
#define glUniform1fv glpfUniform1fv
#define glUniform1i glpfUniform1i
#define glUniform1iv glpfUniform1iv
#define glUniform2f glpfUniform2f
#define glUniform2fv glpfUniform2fv
#define glUniform2i glpfUniform2i
#define glUniform2iv glpfUniform2iv
#define glUniform3f glpfUniform3f
#define glUniform3fv glpfUniform3fv
#define glUniform3i glpfUniform3i
#define glUniform3iv glpfUniform3iv
#define glUniform4f glpfUniform4f
#define glUniform4fv glpfUniform4fv
#define glUniform4i glpfUniform4i
#define glUniform4iv glpfUniform4iv
#define glUniformMatrix2fv glpfUniformMatrix2fv
#define glUniformMatrix3fv glpfUniformMatrix3fv
#define glUniformMatrix4fv glpfUniformMatrix4fv
#define glUseProgram glpfUseProgram
#define glValidateProgram glpfValidateProgram
#define glVertexAttrib1d glpfVertexAttrib1d
#define glVertexAttrib1dv glpfVertexAttrib1dv
#define glVertexAttrib1f glpfVertexAttrib1f
#define glVertexAttrib1fv glpfVertexAttrib1fv
#define glVertexAttrib1s glpfVertexAttrib1s
#define glVertexAttrib1sv glpfVertexAttrib1sv
#define glVertexAttrib2d glpfVertexAttrib2d
#define glVertexAttrib2dv glpfVertexAttrib2dv
#define glVertexAttrib2f glpfVertexAttrib2f
#define glVertexAttrib2fv glpfVertexAttrib2fv
#define glVertexAttrib2s glpfVertexAttrib2s
#define glVertexAttrib2sv glpfVertexAttrib2sv
#define glVertexAttrib3d glpfVertexAttrib3d
#define glVertexAttrib3dv glpfVertexAttrib3dv
#define glVertexAttrib3f glpfVertexAttrib3f
#define glVertexAttrib3fv glpfVertexAttrib3fv
#define glVertexAttrib3s glpfVertexAttrib3s
#define glVertexAttrib3sv glpfVertexAttrib3sv
#define glVertexAttrib4Nbv glpfVertexAttrib4Nbv
#define glVertexAttrib4Niv glpfVertexAttrib4Niv
#define glVertexAttrib4Nsv glpfVertexAttrib4Nsv
#define glVertexAttrib4Nub glpfVertexAttrib4Nub
#define glVertexAttrib4Nubv glpfVertexAttrib4Nubv
#define glVertexAttrib4Nuiv glpfVertexAttrib4Nuiv
#define glVertexAttrib4Nusv glpfVertexAttrib4Nusv
#define glVertexAttrib4bv glpfVertexAttrib4bv
#define glVertexAttrib4d glpfVertexAttrib4d
#define glVertexAttrib4dv glpfVertexAttrib4dv
#define glVertexAttrib4f glpfVertexAttrib4f
#define glVertexAttrib4fv glpfVertexAttrib4fv
#define glVertexAttrib4iv glpfVertexAttrib4iv
#define glVertexAttrib4s glpfVertexAttrib4s
#define glVertexAttrib4sv glpfVertexAttrib4sv
#define glVertexAttrib4ubv glpfVertexAttrib4ubv
#define glVertexAttrib4uiv glpfVertexAttrib4uiv
#define glVertexAttrib4usv glpfVertexAttrib4usv
#define glVertexAttribPointer glpfVertexAttribPointer


/* --------------------------- CATEGORY DEFINES ------------------------------ */

#define GL_ARB_geometry_shader4
#define GL_ARB_texture_float
#define GL_EXT_framebuffer_object
#define GL_EXT_texture_filter_anisotropic
#define GL_EXT_transform_feedback
#define GL_VERSION_1_0
#define GL_VERSION_1_1
#define GL_VERSION_1_2
#define GL_VERSION_1_3
#define GL_VERSION_1_4
#define GL_VERSION_1_5
#define GL_VERSION_2_0

/* ---------------------- Flags for optional extensions ---------------------- */


extern int FLEXT_EXT_framebuffer_object;
extern int FLEXT_ARB_texture_float;
extern int FLEXT_ARB_geometry_shader4;
extern int FLEXT_EXT_transform_feedback;
extern int FLEXT_EXT_texture_filter_anisotropic;

struct GLFWwindow;
typedef struct GLFWwindow GLFWwindow;

int flextInit(GLFWwindow* window);

#define FLEXT_MAJOR_VERSION 2
#define FLEXT_MINOR_VERSION 0
#define FLEXT_CORE_PROFILE 0

#ifdef __cplusplus
}
#endif

#endif /* _gl_h_ */
